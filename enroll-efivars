#!/bin/sh

set -e

# enroll-efivars - Script to enroll UEFI secure boot certificate lists.

if [ "$(id -u )" != "0" ]; then
	echo "Must be root!"
	exit 1
fi

# If running as container, get into the out directory (which should be mounted on the current working directory."
ls -l /run/.containerenv >/dev/null 2>&1 && [ -d /out ] && cd /out
[ -d certs ] && cd certs

rc="0"
for f in combined_db.esl combined_KEK.esl PK.auth ; do
	if [ ! -e $f ]; then
		echo "Error: File $f not found."
		rc="1"
	fi
done
if [ "$rc" != "0" ]; then
	echo "Error: Required files not found, aborting!"
	exit $rc
fi

# Enroll the UEFI variables, if supported.
if [ "$(efivar -d -n 8be4df61-93ca-11d2-aa0d-00e098032b8c-SetupMode 2>/dev/null | cut -d ' ' -f 1)" = "1" ]; then
	# Note: efi variables must be added in reverse order of significance.
	[ -e ms/x64_DBXUpdate.bin ] &&
	sudo efi-updatevar    -f ms/x64_DBXUpdate.bin  dbx
	sudo efi-updatevar -e -f combined_db.esl	db
	sudo efi-updatevar -e -f combined_KEK.esl	KEK
	sudo efi-updatevar    -f PK.auth		PK
else
	echo "Info: This system does not support enrolling UEFI keys."
	if ls -l /run/.containerenv >/dev/null 2>&1 ; then
		echo "This normally cannot be run inside a cointainer."
	fi
fi

echo "Done!"

exit 0

